Utils = require 'utils'

module.exports = ( interfaceDef )->
	cmdName = Utils.getCmdName( interfaceDef.interfaceUrl )

	paraMap = '' #组织参数
	if ( interfaceDef.method == 'POST' ) or ( interfaceDef.method == 'post' )
		paraMap = """
				String dataInfo = XsmTool.getBodyString( req );
				\t\tMap paraMap = JsonUtils.readToObject( dataInfo, Map.class );
				\t\tif ( paraMap == null ) {
				\t\t	throw new RuntimeException( "参数为空！" );
				\t\t}
		"""
	else
		constructParams = '' #GET的情形，组织参数
		if interfaceDef.params instanceof  Array
			for param in interfaceDef.params
				constructParams += """
					\t\tparaMap.put( "#{param.name}", req.getParameter( "#{param.name}" ) );\n
				"""
		else
			for param of interfaceDef.params
				constructParams += """
					\t\tparaMap.put( "#{param}", req.getParameter( "#{param}" ) );\n
				"""
		paraMap = """
				Map paraMap = new HashMap();
				#{constructParams}
		"""

	return  """\n
		@MethodDesc(
			name = "#{interfaceDef.interfaceName}",
			author = "#{interfaceDef.author}", 
			createDate = "#{interfaceDef.date}", 
			inputJson = "#{( JSON.stringify interfaceDef.params ).replace( /\"/g, "'" )}", 
			method = "#{interfaceDef.method}", 
			outputJson = "#{( JSON.stringify interfaceDef.result ).replace( /\"/g, "'" )}", 
			path = "#{interfaceDef.interfaceUrl}",
			desc="#{interfaceDef.desc}",
			version="1.0"
		)
		public void #{Utils.getMethodName interfaceDef.interfaceUrl}(HttpServletRequest req, HttpServletResponse rep,
				IErrorHandler errorHandler, IMessageHandler messageHandler,	ViewHelper viewHelper) {

			if (log.isInfoEnabled()) {
				log.info("[#{interfaceDef.author}] #{Utils.transferFirstLetterUpper cmdName}Cmd.#{Utils.getMethodName interfaceDef.interfaceUrl}--begin");
			}

			Map rltMap = new HashMap();
			try{
				#{paraMap}
				Map data = get#{Utils.transferFirstLetterUpper cmdName}Service().#{Utils.getMethodName interfaceDef.interfaceUrl}( paraMap );
				rltMap.put( "data", data );
				rltMap.put( "ok", "true" );
			}catch( Exception e ){
				if( log.isErrorEnabled() ){
					log.error( "#{Utils.getMethodName interfaceDef.interfaceUrl} Exception = ", e );
				}
				rltMap.put( "ok", false );
				rltMap.put( "msg", e.toString() );
			}finally{
				RepSendJson.sendJson(rltMap, rep);
			}

			if (log.isInfoEnabled()) {
				log.info("[#{interfaceDef.author}] #{Utils.transferFirstLetterUpper cmdName}Cmd.#{Utils.getMethodName interfaceDef.interfaceUrl}--end");
			}

		}\n
	"""